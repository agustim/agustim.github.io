# Instal·lació de Arch linux a un T495 (20200328 - Confinement days) 
# Based in https://gist.github.com/mattiaslundberg/8620837
# Algunes modificacions, per canvis al propi arch.
# 202003280817 - Afegir instal·lació entorn gràfic.
# Descarregar la imatge d'Arch:

dd if=archlinux.img of=/dev/sdX bs=16M && sync # on linux

# Arrancar del usb

# Activa teclat espanyol
loadkeys es

# Configura el wifi
wifi-menu

# Crear les particions UEFI
cgdisk //dev/nvme0n1
1 100MB EFI partition # Hex code ef00
2 250MB Boot partition # Hex code 8300
3 100% size partiton # (to be encrypted) Hex code 8300

mkfs.vfat -F32 /dev/nvme0n1p1
mkfs.ext2 /dev/nvme0n1p2

# Preparme la particion encriptada
cryptsetup -c aes-xts-plain64 -y --use-random luksFormat /dev/nvme0n1p3
cryptsetup luksOpen /dev/nvme0n1p3 luks

# Creem la partició encriptada
# Això crearà una partició per / (Si vols altres particions aquí s'ha de modificar)
pvcreate /dev/mapper/luks
vgcreate vg0 /dev/mapper/luks
# Creem dos particions una de swap i l'altre no
lvcreate --size 8G vg0 --name swap
lvcreate -l +100%FREE vg0 --name root

# Creem el sistem de fitxer a la partició encriptada
mkfs.ext4 /dev/mapper/vg0-root
mkswap /dev/mapper/vg0-swap

# Muntem un nou sistema 
# /mnt serà on hi haurà el sistema
mount /dev/mapper/vg0-root /mnt 
# Activem el Swap
swapon /dev/mapper/vg0-swap
# Muntem la partició de boot
mkdir /mnt/boot
mount /dev/nvme0n1p2 /mnt/boot
# Muntem la partició EFI
mkdir /mnt/boot/efi
mount /dev/nvme0n1p1 /mnt/boot/efi

# Insal·lem el mínim sistema que incloguí wifi per el seguent reboot tenir el nou sistema
# Vim i zsh poden no ser inclosos, no son estrictament necessaris.
pacstrap /mnt base base-devel grub-efi-x86_64 zsh vim git efibootmgr dialog wpa_supplicant linux linux-firmware lvm2

# 'instal·lar' fstab
genfstab -pU /mnt >> /mnt/etc/fstab
# Fer /tmp un disk de ram, afegint ls seguent línia a /mnt/etc/fstab
tmpfs	/tmp	tmpfs	defaults,noatime,mode=1777	0	0
# Canviar relatime a totes les particions no-bootables a noatime (redueix el desgast si uses un SSD)


# Entrem al nou sistema (el chroot que té arch)
arch-chroot /mnt /bin/bash

# Actualitzem zona horaria més rellotge, ens sentim més aprop d'Andorra. :-)
ln -s /usr/share/zoneinfo/Europe/Andorra /etc/localtime
hwclock --systohc --utc

# Definim el nom de la maquina
echo "haru" > /etc/hostname

# actualitzem les variables de localització
echo LANG=ca_ES.UTF-8 >> /etc/locale.conf
echo LANGUAGE=ca_ES >> /etc/locale.conf
echo LC_COLLATE=ca_ES.UTF-8 >> /etc/locale.conf

locale-gen
# Això no genera correctament els locales S'ha de revisar!!!!

# Configurar el teclat
echo KEYMAP=es >> /etc/vconsole.conf

# Posem un password a root
passwd

# Afegirm un usuari podem canviar el shell a /bin/zsh o un altre si volem.
useradd -m -g users -G wheel -s /bin/bash MYUSERNAME
passwd MYUSERNAME

# Configurem mkinitcpio amb el moduls necessaris per l'arranc de l'imatge.
vim /etc/mkinitcpio.conf
# Afegir 'ext4' a MODULES
# Afegir 'encrypt' i 'lvm2' a HOOKS abans de filesystems

# Regenerem els initcpio
mkinitcpio -p linux

# Configurar grub
grub-install
vim /etc/default/grub 
# Modifiquem GRUB_CMDLINE_LINUX="cryptdevice=/dev/nvme0n1p3:luks:allow-discards" 
grub-mkconfig -o /boot/grub/grub.cfg

# Sortim del "nou" sistema, tornem a la shell
exit

# Desmontem totes les particions
umount -R /mnt
swapoff -a

# Editar el fitxer de sudoers perquè un usuari pugui executar sudo
# Descomentar la linia "%wheel ALL=(ALL) ALL"

# Definir fitxer de hosts
echo "127.0.0.1   localhost" >> /etc/hosts
echo "::1         localhost" >> /etc/hosts
echo "127.0.1.1   haru.localdomain haru" >> /etc/hosts

# Ja podem fer un reboot, sense oblidar treure el usb
reboot

# Configurar xarxa (en el primer arranc no hi ha wifi!!)
# Configurar ethernet (TODO configurar wifi)
sudo ip l set enp5s0 up
# Depent de la teva xarxa
sudo ip a a ip 192.168.x.y/24 dev enp5s0
# 192.168.x.z és el teu default gw
sudo ip r a default 192.168.x.z 

# Actualitzar Sistema
sudo pacman -Suy

# Instal·lar entorn de finestres
sudo pacman -S xorg xorg-server
sudo pacman -S gnome

(Potser es podria ja instal·lar en l'entorn basic?)

# Instal·lar firmwares 
git clone https://aur.archlinux.org/aic94xx-firmware.git
cd aic94xx-firmware
makepkg -sri

git clone https://aur.archlinux.org/wd719x-firmware.git
cd wd719x-firmware
makepkg -sri

# Instal·lant yay

git clone https://aur.archlinux.org/yay-git.git
cd yay-git
makepkg -sri

# Configurar start de l'entorn de finestres
systemctl start gdm.service
systemctl enable gdm.service
systemctl enable NetworkManager.service

# Instal·lar germinal i el confi
yay -S germinal

# Per poder canviar la configuració de germinal
# Ara ho pots canviar a dintre de dconf-editor al path org/gnome/Germinal
sudo pacman -S dconf-editor

# Instal·lar visual code
sudo pacman -S code

# Fonts amb emojis
sudo pacman -S ttf-joypixels

# Instal·lar navegadors
sudo pacman -S chromium firefox

# Insta·lar extensió x extensions de gnome
sudo pacman -S chrome-gnome-shell
yay -S gnome-shell-extension-coverflow-alt-tab-git
yay -S gnome-shell-extension-cast-to-tv-git
yay -S gnome-shell-extension-dash-to-panel

# Des de chromium https://extensions.gnome.org/local/ instal·lem dash-to-panel, clipboard-indicator i caffein

# Docker
sudo pacman -S docker docker-compose
sudo systemctl enable docker
sudo gpasswd -a agusti docker

# Udisks2
# Automount system
sudo pacman -S udisks2

# Completar amb bash
sudo pacman -S bash-completion

# Instal·lar cryfs
sudo pacman -S cryfs

# Instal·lar browser brave
yay -S brave



